// <auto-generated />
using System;
using EmployeeAPIProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeAPIProject.Migrations
{
    [DbContext(typeof(EmployeeDbContext))]
    partial class EmployeeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeAPIProject.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DOB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("JobId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("LaterStatus")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Phone")
                        .HasColumnType("bigint");

                    b.Property<long>("Salary")
                        .HasColumnType("bigint");

                    b.Property<string>("StatusChangeChoice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StatusChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusChangeReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.HasIndex("StatusId");

                    b.ToTable("employees");
                });

            modelBuilder.Entity("EmployeeAPIProject.Models.EmployeeStatus", b =>
                {
                    b.Property<Guid>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StatusName")
                        .HasColumnType("int");

                    b.HasKey("StatusId");

                    b.ToTable("EmployeeStatus");
                });

            modelBuilder.Entity("EmployeeAPIProject.Models.EmployeeSupervisor", b =>
                {
                    b.Property<Guid>("SupervisorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SupervisorType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SupervisorId", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeSupervisor");
                });

            modelBuilder.Entity("EmployeeAPIProject.Models.JobDescription", b =>
                {
                    b.Property<Guid>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Responsibilities")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JobId");

                    b.ToTable("JobDescription");
                });

            modelBuilder.Entity("EmployeeAPIProject.Models.LoginLog", b =>
                {
                    b.Property<Guid>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LoginTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LogoutTime")
                        .HasColumnType("datetime2");

                    b.HasKey("LogId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("LoginLog");
                });

            modelBuilder.Entity("EmployeeAPIProject.Models.Employee", b =>
                {
                    b.HasOne("EmployeeAPIProject.Models.JobDescription", "JobDescription")
                        .WithMany("Employees")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeAPIProject.Models.EmployeeStatus", "EmployeeStatus")
                        .WithMany("Employees")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeStatus");

                    b.Navigation("JobDescription");
                });

            modelBuilder.Entity("EmployeeAPIProject.Models.EmployeeSupervisor", b =>
                {
                    b.HasOne("EmployeeAPIProject.Models.Employee", "Employee")
                        .WithMany("Supervisors")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EmployeeAPIProject.Models.LoginLog", b =>
                {
                    b.HasOne("EmployeeAPIProject.Models.Employee", "Employee")
                        .WithMany("LoginLogs")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EmployeeAPIProject.Models.Employee", b =>
                {
                    b.Navigation("LoginLogs");

                    b.Navigation("Supervisors");
                });

            modelBuilder.Entity("EmployeeAPIProject.Models.EmployeeStatus", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("EmployeeAPIProject.Models.JobDescription", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
